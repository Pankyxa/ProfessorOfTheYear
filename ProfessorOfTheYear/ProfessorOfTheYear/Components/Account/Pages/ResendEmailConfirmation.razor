@page "/Account/ResendEmailConfirmation"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using ProfessorOfTheYear.Data

@inject UserManager<ApplicationUser> UserManager
@inject IEmailSender<ApplicationUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Повторное подтверждение почты</PageTitle>

<EditForm Model="Input" FormName="resend-email-confirmation" OnValidSubmit="OnValidSubmitAsync" method="post" class="form-layout">
    <p class="form-title">Повторное подтверждение почты</p>

    <StatusMessage Message="@message" />
    <DataAnnotationsValidator />

    <div class="form-input">
        <ValidationMessage For="() => Input.Email" class="text-danger" />
        <InputText @bind-Value="Input.Email" class="form-control" aria-required="true" placeholder="Электронная почта" />
    </div>
    <div class="form-buttons">
        <Button 
            Type="ButtonType.Submit"
            Color="ButtonColor.Primary">
                Отправить
        </Button>
    </div>
</EditForm>

@code {
    private string? message;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email!);
        if (user is null)
        {
            message = "Письмо с подтверждением отправлено. Пожалуйста, проверьте свой адрес электронной почты.";
            return;
        }

        var userId = await UserManager.GetUserIdAsync(user);
        var code = await UserManager.GenerateEmailConfirmationTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri("Account/ConfirmEmail").AbsoluteUri,
            new Dictionary<string, object?> { ["userId"] = userId, ["code"] = code });
        await EmailSender.SendConfirmationLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        message = "Письмо с подтверждением отправлено. Пожалуйста, проверьте свой адрес электронной почты.";
    }

    private sealed class InputModel
    {
        [Required]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
