@page "/feedback"
@rendermode InteractiveAuto
@using System.ComponentModel.DataAnnotations

<PageTitle>Обратная связь </PageTitle>

<div class="block-title">
    <div class="block-title-text">
        Обратная связь
    </div>
</div>
<div class="block-group">
    <div class="block">
        <div class="block-content">
            <div class="title-page">Задать вопрос</div>
            <div class="discription-page">Здесь вы можете оставить нам сообщение</div>
        </div>
    </div>
    <div class="block">
        <EditForm EditContext="@_editContext" OnValidSubmit="HandleOnValidSubmit" class="w-100">
            <DataAnnotationsValidator />
            <div class="form-block">
                <div class="form-content">
                    <label class="col-md-2 form-content-title">Ваше имя</label>
                    <div class="form-content-input">
                        <InputText class="form-control" @bind-Value="customer.Name" />
                        <ValidationMessage For="@(() => customer.Name)" />
                    </div>
                </div>
                <div class ="form-content">
                    <label class="col-md-2 form-content-title">Электронная почта</label>
                    <div class="form-content-input">
                        <InputText class="form-control" @bind-Value="customer.Address" />
                        <ValidationMessage For="@(() => customer.Address)" />
                    </div>
                </div>
                <div class="form-content-col">
                    <label class="col-md-2 form-content-title">Ваше сообщение</label>
                    <div class="form-content-input">
                        <InputTextArea class="form-control" @bind-Value="customer.Message" />
                        <ValidationMessage For="@(() => customer.Message)" />
                    </div>
                </div>
                <Button Type="ButtonType.Submit" Color="ButtonColor.Success" Class="float-end">Отправить</Button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private Customer customer = new();
    private EditContext? _editContext;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(customer);
        base.OnInitialized();
    }

    public void HandleOnValidSubmit()
    {
        Console.WriteLine($"Customer name is {customer.Name}, address is {customer.Address}, and message is {customer.Message}");
    }

    public class Customer
    {
        [Required]
        public string Name { get; set; } = default;

        [Required]
        public string Address { get; set; } = default;

        [Required]
        public string Message { get; set; } = default; 
    }
}
