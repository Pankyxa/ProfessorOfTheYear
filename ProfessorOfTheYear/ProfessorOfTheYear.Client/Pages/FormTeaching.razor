@page "/formteaching"
@using ProfessorOfTheYear.Client.Model
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@rendermode RenderMode.InteractiveAuto

<style>
    .valid.modified:not([type=checkbox]) {
        outline: 1px solid #26b050;
    }

    .invalid {
        outline: 1px solid red;
    }

    .validation-message {
        color: red;
    }
</style>

<h1>Заполните анкету участника</h1>
<EditForm EditContext="@editContext" OnValidSubmit="HandleOnValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Выберите ученое звание: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputSelect class="form-control" style="white-space: normal" @bind-Value="invoice.Scientifictitle">
                <option hidden selected value="0">Выберите ученое звание:</option>
                    <option value="1">нет</option>
                    <option value="2">доцент</option>
                    <option value="3">профессор</option>
                </InputSelect>
            <ValidationMessage For="@(() => invoice.Scientifictitle)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Ученая степень: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="invoice.Scientificdegree" Placeholder="Введите ученую степень" />
            <ValidationMessage For="@(() => invoice.Scientificdegree)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Научная специальность (по классификации ВАК): <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="invoice.Scientificspecialty" Placeholder="Введите научную специальность" />
            <ValidationMessage For="@(() => invoice.Scientificspecialty)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Стаж научно-педагогической деятельности по трудовой книжке: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="invoice.Teachingexperience" Placeholder="Введите свой стаж" />
            <ValidationMessage For="@(() => invoice.Teachingexperience)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Домашний адрес: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="invoice.HomeAdress" Placeholder="Введите домашний адрес" />
            <ValidationMessage For="@(() => invoice.HomeAdress)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Контактные телефоны: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="invoice.Phonenumber" Placeholder="Введите контактный телефон" />
            <ValidationMessage For="@(() => invoice.Phonenumber)" />
        </div>
    </div>





    <div class="row">
        <div class="col-md-12 text-right">
            <Button Type="ButtonType.Submit" Color="ButtonColor.Success" Class="float-end me-2">Submit</Button>
        </div>
    </div>

    
</EditForm>

@code {
    private Invoice invoice = new();
    private EditContext? editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(invoice);
        base.OnInitialized();
    }
    protected void OnClick(EventArgs args)
    {
        Console.WriteLine("click event");
    }


    public void HandleOnValidSubmit()
    {
        NavigationManager.NavigateTo("/formteaching1");
    }

    public class Invoice
    {
        [Required(ErrorMessage = "Выберите ученое звание")]
        //[Range(1, 3, ErrorMessage = "Выберите направление конкурса")]
        public string? Scientifictitle { get; set; }

        [Required(ErrorMessage = "Введите ученую степень")]
        //[Range(1, 3, ErrorMessage = "Выберите направление конкурса")]
        public string? Scientificdegree { get; set; }

        [Required(ErrorMessage = "Введите научную специальность")]
        public string? Scientificspecialty { get; set; }

        [Required(ErrorMessage = "Введите свой стаж")]
        public string? Teachingexperience { get; set; }

        [Required(ErrorMessage = "Введите домашний адрес")]
        public string? HomeAdress { get; set; }

        [Required(ErrorMessage = "Введите контактный телефон")]
        public string? Phonenumber { get; set; }

    }
}
