@page "/formeditpage"
@using ProfessorOfTheYear.Client.Model
@inject NavigationManager NavigationManager
@using System.ComponentModel.DataAnnotations
@rendermode RenderMode.InteractiveAuto
@using ProfessorOfTheYear.Client.Data
@inject IDataServiceTeaching databaseinformation

<style>
    .valid.modified:not([type=checkbox]) {
        outline: 1px solid #26b050;
    }

    .invalid {
        outline: 1px solid red;
    }

    .validation-message {
        color: red;
    }
</style>

<h1>Заполните заявку</h1>
<EditForm EditContext="@editContext" OnValidSubmit="HandleOnValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Выберите направление конкурса: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputSelect class="form-control" style="white-space: normal" @bind-Value="baseInformation.DirectionCompetition" Placeholder="Выберите направление конкурса:">
                    <option hidden selected value="0">Выберите направление конкурса:</option>
                    <option value="1">АРХИТЕКТУРА</option>
                    <option value="2">ТЕХНИКА И ТЕХНОЛОГИИ СТРОИТЕЛЬСТВА</option>
                    <option value="3">СТРОИТЕЛЬСТВО И АРХИТЕКТУРА</option>
                    <option value="4">ЭЛЕКТРО - И ТЕПЛОЭНЕРГЕТИКА</option>
                    <option value="5">ЯДЕРНАЯ ЭНЕРГЕТИКА И ТЕХНОЛОГИИ</option>
                    <option value="6">ЭНЕРГЕТИКА И ЭЛЕКТРОТЕХНИКА</option>
                </InputSelect>
            <ValidationMessage For="@(() => baseInformation.DirectionCompetition)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Выберите категорию участника конкурса: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputSelect class="form-control" style="white-space: normal" @bind-Value="baseInformation.CategoryCompetition" Placeholder="Выберите категорию участника конкурса">
                <option hidden selected value="0">Выберите категорию участника конкурса:</option>
                <option value="1">аспиранты, адъюнкты, ординаторы, ассистенты-стажеры и работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), не имеющие ученой степени</option>
                <option value="2">докторанты и работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), имеющие ученую степень кандидата наук</option>
                <option value="3">работники высших учебных заведений, отраслевых и академических институтов, работники сектора промышленности (исследователи), имеющие ученую степень доктора наук </option>
            </InputSelect>
            <ValidationMessage For="@(() => baseInformation.CategoryCompetition)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Полное название вашей работы: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="baseInformation.NameWork" Placeholder="Введите полное название вашей работы" />
            <ValidationMessage For="@(() => baseInformation.NameWork)" />
        </div>
    </div>


    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">ФИО: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="baseInformation.FullName" Placeholder="Введите ФИО" />
            <ValidationMessage For="@(() => baseInformation.FullName)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Дата рождения: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <DateInput TValue="DateOnly?" @bind-Value="baseInformation.InvoiceDate" />
            <ValidationMessage For="@(() => baseInformation.InvoiceDate)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">место работы/учебы: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="baseInformation.PlaceWork" Placeholder="Введите место работы/учебы" />
            <ValidationMessage For="@(() => baseInformation.PlaceWork)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Введите должность: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="baseInformation.Post" Placeholder="Введите должность" />
            <ValidationMessage For="@(() => baseInformation.Post)" />
        </div>
    </div>

    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Введите стаж работы: <span class="text-danger">*</span></label>
        <div class="col-md-10">
            <InputText class="form-control" @bind-Value="baseInformation.WorkExperience" Placeholder="Введите стаж работы" />
            <ValidationMessage For="@(() => baseInformation.WorkExperience)" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-12 text-right">
            <Button Type="ButtonType.Submit" Color="ButtonColor.Success" Class="float-end me-2">Submit</Button>
        </div>
    </div>
</EditForm>

@code {
    DataTeachingDTO.BaseInformation? baseInformation { get; set; } = new();
    private EditContext? editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(baseInformation);
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }




    public void HandleOnValidSubmit()
    {
        databaseinformation.UpdateAsync(baseInformation);
        NavigationManager.NavigateTo("/formsuccess");
    }


}
