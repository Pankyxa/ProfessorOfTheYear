@page "/voting/category"
@rendermode InteractiveServer
@inject ProfessorsDataService pds
@inject NavigationManager navigate

<PageTitle>Голосование</PageTitle>

<div class="block-title">
    <div class="title-direction" >
        <div class="block-title-text">Название категории</div>
        <Icon Name="IconName.ArrowLeft" Size="IconSize.x2" @onclick="NavToBack" type="button" />
    </div>
    <div class="block-content-text">
        Выберите кандидата для голосования
    </div>
</div>

<div class="page-content">
    @if (professors == null)
    {
        <p>Loading...</p>
    } else {
        @foreach (var professor in professors)
        {
            <div class="click-cursor">
                <TeacherCard
                    professorInfo="professor"
                    ViewInfo="async () => await OnUpdateHandler(professor.Id!)"
                />
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public List<ProfessorInfo>? professors { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        professors = await pds.GetAllProfessors();
    }

    async Task OnUpdateHandler(string id)
    {
        await Task.Run(() => navigate.NavigateTo($"/voting/category/teacher/{id}"));
    }

    private void NavToBack()
    {
        navigate.NavigateTo("/voting");
    }
}